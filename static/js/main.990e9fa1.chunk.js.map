{"version":3,"sources":["single.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["access","array","single","props","func","meancalc","mediancalc","modecalc","deviationcalc","mean1","console","log","i","length","state","mean","setState","toFixed","sort","a","b","median","Math","floor","push","parseInt","value","mode1","high","count","k","mode","squres","k1","deviation","sqrt","print","getData","Data","data","map","item","this","document","getElementById","onClick","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.990e9fa1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Data from './data.json'\r\nimport ReactTable from \"react-table\";  \r\n \r\n\r\nvar array=[],access;\r\n class single extends Component {\r\n\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              mean:0,\r\n              median:0,\r\n              mode:0,\r\n              deviation:0,\r\n              data:[]\r\n         }\r\n     }\r\n     func=()=>{\r\n         this.meancalc();\r\n         this.mediancalc();\r\n         this.modecalc();\r\n         this.deviationcalc();\r\n     }\r\n     meancalc=()=>{\r\n          var mean1=0;\r\n          console.log(\"mean\",mean1)\r\n        for(var i=0;i<array.length ;i++){\r\n            mean1+=array[i];\r\n           \r\n            \r\n        }\r\n        this.state.mean=mean1/array.length;\r\n        this.setState({mean:(mean1/array.length).toFixed(6)});\r\n       \r\n        \r\n     }\r\n     mediancalc=()=>{\r\n      array.sort(function(a, b){return a-b});\r\n        for(var i=0;i<array.length;i++){\r\n            console.log(array[i])\r\n        }\r\n            \r\n        \r\n        \r\n         if(array.length%2!=0)\r\n        this.setState({median:array[Math.floor(array.length/2)].toFixed(6)})\r\n        else\r\n        this.setState({median:((array[array.length/2]+array[(array.length/2)-1])/2).toFixed(6)})\r\n\r\n     }\r\n     push=()=>{\r\n         array.push(parseInt(access.value));\r\n         access.value=\"\"\r\n         \r\n        //  this.func();\r\n\r\n     }\r\n     modecalc=()=>{\r\n        \r\n     var mode1,high=0,count=0,k=array[0];\r\n    for(var i=0;i<array.length;i++){\r\n        if(k==array[i]){\r\n            count++;\r\n         }\r\n         else{\r\n             if(high<count){\r\n                 mode1=k;\r\n                 high=count;\r\n             }\r\n             count=1;\r\n             k=array[i];\r\n\r\n         }\r\n    }\r\n    this.setState({mode:mode1.toFixed(6)})\r\n     }\r\n     deviationcalc=()=>{\r\n        var squres=0;\r\n        var k1=this.state.mean;\r\n        console.log();\r\n        for(var i=0;i<array.length ;i++){\r\n            squres+=(array[i]-k1)*(array[i]-k1);\r\n            \r\n        }\r\n        this.setState({deviation:Math.sqrt(squres/array.length).toFixed(6)})\r\n\r\n     }\r\n     print=()=>{\r\n        console.log(array[2]);\r\n         for(var i=0;i<array.length ;i++){\r\n             console.log(array[i]);\r\n         }\r\n     }\r\n     getData=()=>{\r\n        Data.data.map((item)=>{\r\n            array.push(item);\r\n           \r\n      })\r\n      }\r\n      componentDidMount(){\r\n          this.getData()\r\n          access=document.getElementById(\"number\");\r\n      }\r\n     \r\n    render() {\r\n       \r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.func}>load</button>\r\n                {/* <button onClick={this.print}>print</button> */}\r\n                {/* <button onClick={this.getData}>load</button> */}\r\n              <table >\r\n                 <thead>\r\n                 <tr>\r\n                      <th>tile</th>\r\n                      <th>value</th>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>mean</td>\r\n                      <td>{this.state.mean}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>median</td>\r\n                      <td>{this.state.median}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>mode</td>\r\n                      <td>{this.state.mode}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>deviation</td>\r\n                      <td>{this.state.deviation}</td>\r\n                  </tr>\r\n                 </thead>\r\n              </table>\r\n            <input id=\"number\"></input>\r\n            <button id=\"butt\" onClick={this.push}> push it</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default single\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Single from './single'\n\nfunction App() {\n  return (\n    \n      <Single></Single>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}